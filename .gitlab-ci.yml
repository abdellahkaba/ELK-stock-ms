stages:
  - packaging
  - build_docker_image
#  - helm_publish
  - deploy

default:
  image: maven:3.8.3-openjdk-17

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  IMAGE_TAG: "$CI_REGISTRY/isi-dev/microservices/stock-ms:latest"
  KUBE_CONTEXT: "isi-dev/microservices/k8s-connection:k8s-connection"

run unit tests and package:
  inherit:
    default: true
    variables: true
  stage: packaging
  script:
    - mvn clean package
  artifacts:
    paths:
      - target/*.jar
  cache:
    paths:
      - .m2/repository

# Build docker image from Docker compose
build docker image:
  image: docker:latest
  stage: build_docker_image
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
    - echo "Image build"
  when: manual

# Package Helm Chart
#package helm chart:
#  image: alpine/helm:3.12.3
#  stage: helm_publish
#  script:
#    - helm lint ./stock-ms/
#    - helm package ./stock-ms
#    - ls -l stock-ms-*.tgz  # Affiche les permissions et la taille du fichier
#    - chmod 644 stock-ms.tgz  # Ajuste les permissions pour le fichier
#    - mv stock-ms-0.1.0.tgz ./chart.tgz
#    - echo "Helm chart packaged"
#  artifacts:
#    paths:
#      - chart.tgz
#  only:
#    - main

# Deploy using Helm
deploy to kubernetes:
  image: alpine/helm:3.12.3
  stage: deploy
  before_script:
    - echo "$KUBE_CONFIG" > kubeconfig
    - export KUBECONFIG=kubeconfig
  script:
    - helm upgrade --install stock-ms ./chart.tgz \
      --set image.repository=$CI_REGISTRY/isi-dev/microservices/stock-ms \
      --set image.tag=latest \
      --kube-context=$KUBE_CONTEXT
    - echo "Deployment complete"
  only:
    - main

